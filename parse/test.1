procedure foo() return integer{
	if(3 == 5) {} else {
		if(3 == 5) {} else {
			if(3 == 5) {} else {
				if(3 == 5) {} else {
					if(3 == 5 >5<1== 5 >5<1== 5 >5<1== 5 >5<1== 5 >5<1== 5 >5<1) {} else {}
				}
			}
		}
	}
	g = 4;
	return 7;
}
procedure bar() return integer{
	return 0x1423FF;
}
procedure baz(num:integer) return integer{
	return 01110010b;
}
procedure hello(bool:boolean) return integer{
	return 01472364;
}
procedure start(num:integer;boo:boolean) return integer{
	return 5;
}
procedure Variables() return integer{
	var a,b,c:integer;
	var h,g:boolean;
	return 5;
}
procedure Assign() return integer{
	var a,b,c:integer;
	a = 5;
	b = 4;
	return 4;
}
procedure ALL() return integer{


	procedure Hello() return integer{
		return 5;
	}
	procedure hi(a:integer) return integer{
		return 5;
	}
	procedure l(g:boolean ; g:integer) return boolean{


		procedure hi(a:integer) return integer{
			return 5;
		}

				var a,g:integer;
		var g,t:boolean;
		return false;
	}
		var a,b,c:integer;
	var h,g:boolean;

		g = 4;
	a = 5;
	b = 6;
	return 6;
}
procedure hey() return integer{
	var a:boolean;
		a = 4;
	if(4 > 3){	

	}
	return 4;
}
procedure to(g:integer) return boolean{
	var g:boolean;
	if(sdf == oijw){

		}
	return true;
}

procedure Main() return integer{
	procedure goob() return integer{
		return 5;
	}

	var agh:integer;
	var ghlo:boolean;

	if(5==5){
		g = 7;
	}

	g = 5;

	return 3;
}
procedure Main() return integer
{
    var ret : integer;
    ret = compare(5,25);
    return ret; 
}
     
/*returns 1 if numberOne > numberTwo, 0 otherwise */
procedure compare(numberOne, numberTwo  : integer) return integer
{
    var ret : integer;

    if(numberOne > numberTwo)
    { 
        ret = 1; 
    }
    else 
    {
        ret = 0;     
    }

    return ret;
}




procedure Main() return integer
{
	var j, k, m, n: integer; 
	var o: boolean;

	j = 2;
	
	k = - j;

	{{}{}}{
		m = 100 - k * k;
		m = 100 - k * k;
		{}
		}
	m = 100 - k * k;
	{{{m = 100 - k * k;}}}

	{{{
	{
	m = 100 - k * k;
	}
	m = 100 - k * k;
}}} 

	 n = printint( m ); 

	return 0;
}

procedure foo(i : integer;j : integer; k : integer) return integer
{
return 0;
}




procedure foo() return integer { 
    var c : integer;
   c=(3 + 2) / 3 - 5 * 2;
   c=true && false || false;
   c=5;
   c=0x012;
   c=true;
   c=-5;
   c=c[3] + 5;
   c=false ;
      c=|5|;
   c=|0x012|;
   c=|true|;
   c=|-5|;
   c=|c[3] + 5|;
   c=|false| ;
    return 0;
}

procedure first(a : integer; b: boolean) return boolean {
if(a < 5) {
  b = b && (a == 10);
 } else {
  b = b || b;
 }
 return b;
}
procedure Main() return integer {
 var x, y : integer;
 var z : boolean;
 y = 011b;
 b = false;
 
 return x + y;
}

procedure test(t:integer; a:boolean) return  integer
{
 
/* ignore this */ 
        procedure inside()return  boolean{
                if (5+5){
                 b=c();
                 a=print(a[8]);
                }else{
                        a = 5;
                }
                return 1;
        }

               var ID2 : integer;
        var ID3, ID4 : boolean;
/****** ingore
this
** / */
        return 0+9*(4+a);
/* test */

}
