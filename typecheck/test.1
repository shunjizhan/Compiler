procedure Main() return integer
{
    var x : charptr;
    var x : integer;
    var y : intptr;
    x = 5;
    y = &x;
    x = 6;
    y = "foobar";
    x = &y[5];
    z = ^(x - 5);
    y = "barfoo";
 
    return !false;
}

procedure final() return integer{

	 x = 4 + (true == 5 / 56 + 4) / x;
	  x = 'c' + true;
 x = 'c' + 2;
 x = ^^y;
 x = ^123;
 x = ^true;
 x = ^&x;
 x = &x + 4;
 x = |4|;
 x = |true|;
	/%^(^y + 3);%/
	/%^&stri[expr] = expr; %/
	/%foo();%/ 
	/%if(a != "test"){  } %/
	/%x = &y[4]);%/
	/%x = &(^&y[4]);%/
	/%myvar = &"xylophone";%/
	/%c = ||3||;%/
	/%x = &"test"[0];%/

	/%10) x = "stringliteral" + 4;%/
/%11) x = ^"stringliteral";%/
/%12) x = |"stringliteral"|;%/
/%13) x = "stringliteral"[2];%/
/%14) x = 123[123]%/
/%15) x = 123[123][123]%/
/%16) x = y[123][123]%/

	return x[7+1];
}

procedure foo() return integer{
	procedure Main() return integer
{
 /% your scanner should be able %/return 0;/% to catch this return %/
}
procedure Main() return integer
{
 /% your scanner should be able %/ 
 return 0;
 /% to catch this return %/
}
procedure Main() return integer
{
 /% 
   /%
   Simple comment
 %/
 return 0;
}
procedure Main() return integer
{
 /% Simple comment 2%/         
 return 0;
}
procedure Main() return integer
{
 /% 
   Simple comment 1
 %/
 return 0;
}
	if(3 == 5) {} else {
		if(3 == 5) {} else {
			if(3 == 5) {} else {
				if(3 == 5) {} else {
					if(3 == 5 >5<1== 5 >5<1== 5 >5<1== 5 >5<1== 5 >5<1== 5 >5<1) {} else {}
				}
			}
		}
	}
	g = 4;
	return 7;
}
procedure bar() return integer{
	return 0x1423FF;
}
procedure baz(num:integer) return integer{
	return 01110010b;
}
procedure hello(bool:boolean) return integer{
	return 01472364;
}
procedure start(num:integer;boo:boolean) return integer{
	return 5;
}
procedure Variables() return integer{
	var a,b,c:integer;
	var h,g:boolean;
	return 5;
}
procedure Assign() return integer{
	var a,b,c:integer;
	a = 5;
	b = 4;
	return 4;
}
procedure ALL() return integer{


	procedure Hello() return integer{
		return 5;
	}
	procedure hi(a:integer) return integer{
		return 5;
	}
	procedure l(g:boolean ; g:integer) return boolean{


		procedure hi(a:integer) return integer{
			return 5;
		}

				var a,g:integer;
		var g,t:boolean;
		return false;
	}
		var a,b,c:integer;
	var h,g:boolean;

		g = 4;
	a = 5;
	b = 6;
	return 6;
}
procedure hey() return integer{
	var a:boolean;
		a = 4;
	if(4 > 3){	

	}
	return 4;
}
procedure to(g:integer) return boolean{
	var g:boolean;
	if(sdf == oijw){

		}
	return true;
}

procedure Main() return integer{
	procedure goob() return integer{
		return 5;
	}

	var agh:integer;
	var ghlo:boolean;

	if(5==5){
		g = 7;
	}

	g = 5;

	return 3;
}
procedure Main() return integer
{
    var ret : integer;
    ret = compare(5,25);
    return ret; 
}
     
/%returns 1 if numberOne > numberTwo, 0 otherwise %/
procedure compare(numberOne, numberTwo  : integer) return integer
{
    var ret : integer;

    if(numberOne > numberTwo)
    { 
        ret = 1; 
    }
    else 
    {
        ret = 0;     
    }

    return ret;
}




procedure Main() return integer
{
	var j, k, m, n: integer; 
	var o: boolean;

	j = 2;
	
	k = - j;

	{{}{}}{
		m = 100 - k * k;
		m = 100 - k * k;
		{}
		}
	m = 100 - k * k;
	{{{m = 100 - k * k;}}}

	{{{
	{
	m = 100 - k * k;
	}
	m = 100 - k * k;
}}} 

	 n = printint( m ); 

	return 0;
}

procedure foo(i : integer;j : integer; k : integer) return integer
{
return 0;
}




procedure foo() return integer { 
    var c : integer;
   c=(3 + 2) / 3 - 5 * 2;
   c=true && false || false;
   c=5;
   c=0x012;
   c=true;
   c=-5;
   c=c[3] + 5;
   c=false ;
      c=|5|;
   c=|0x012|;
   c=|-5|;
    return 0;
}

procedure first(a : integer; b: boolean) return boolean {
if(a < 5) {
  b = b && (a == 10);
 } else {
  b = b || b;
 }
 return b;
}
procedure Main() return integer {
 var x, y : integer;
 var z : boolean;
 y = 011b;
 b = false;
 
 return x + y;
}

procedure test(t:integer; a:boolean) return  integer
{
 
/% ignore this %/ 
        procedure inside()return  boolean{
                if (5+5){
                 b=c();
                 a=print(a[8]);
                }else{
                        a = 5;
                }
                return 1;
        }

               var ID2 : integer;
        var ID3, ID4 : boolean;
/%***** ingore
this
** / %/
        return 0+9*(4+a);
/% test %/

}

procedure newtest() return  integer
{
        var a : integer;
        var b : string[100];
        var d, c : string[100];
        a[4+2] = 0x99;
        b[3] = b[6]+b[19];
	a = 5 + /%----!!!!!---%/ 4;
	a[4] = |4 + 2|;
        afa = 076;
        xed = -5-4;
        a = 3 || 2;
        b=!(3+2)/3;  
        h = |(5+5)|;
        d = |5|;
        h=|a|;
        c=true && false || false;
        g=!false;
        /% same problem d = !5; %/
        g = -5 == 9;
        e = true;
        f = c[4] - -5;
        if ( x+5 ){
                a = (5*x);

        }
        /%test2 = | |4| + |7| |;%/
        test = hey( 5, 5+4 );  /%this broke my shit%/
        a[6+7] = test();



        return 19;
}

procedure foo() return integer {
	procedure Main() return integer
	        {
	            var a : integer;
	            a = foo();
	            return 0;
	        }

	procedure foo(i : integer; j : integer; k : integer) return integer
	        {
	            procedure fee(l : integer; m : boolean; n : integer) return boolean
	            {
	                return true;
	            }
	            return 0;
	        }

	procedure foo() return integer { return 0; }
	procedure foo2() return integer { return 0; }
	procedure f234() return integer { return 0; }

	procedure foo(i:integer; j:boolean; k:integer) return integer { return 0; }
	procedure fee(a:integer; b:integer) return integer { return 0; }
	procedure fie() return boolean { return false; }
	procedure foo(i:integer; j:integer; k:integer) return integer
	        {
	            
	            
	            procedure square(t:integer) return integer 
	            {
	                var temp : integer;
	                var i : integer;
	                var m, n : boolean;
	                var o : string[100];
	                temp = t * t;
	                return 0;
	            }
	            var total : integer; 
	            
	            total = 1; /% statements %/
	            return 0; /% return statement %/
	        }

	procedure foo() return integer { 
		var a, b : string[100];
	            var c : integer;
	            a[19] = 24 + 3;
	            a[4+2] = 5;
	            b[3] = b[6] + b[19] + |c|;
	            cdd = -5;
	return 0; 
	}

	a = 5;

	return true;
}

procedure Hello(p:boolean;g:integer) return boolean{


	procedure bye(p:integer;g:boolean;l:boolean) return integer{
	procedure foo() return integer{
			g = 4;
			return 7;
		}
		procedure bar() return boolean{
			procedure baz(num:integer) return integer{
				return 01110010b;
			}
			return false;
		}
		procedure baz(num:integer) return integer{
			return 01110010b;
		}

			var fgg,h:integer;
	var fgg,h:integer;
		var g:boolean;
		var t:integer;

		var fgg,h:integer;
		var fgg,h:integer; /% This is a comment yo %/
		var fjdfidf, ogjfd:boolean;
		{{{{{}}}}}{
		if(4 == 2){
			f = -5;
			f = 54-23+678;
			f = (3 + 2) / 3 - 5 * 2;
			f = 6*3;
			}
		else{

			g = 0x43562FF;
		}}{
		a = f[4];

	{{}	g = 0x42265FF;}
		b = 0110110b;
}
		if(7-1 > 6*g){
		}else{
			/% 348ru9oerigfjrt2635t96r84gfs86
			
			g6w8346845686684243;rle;,;l,gdr,ltw%/
		}

		h = 012347561;
		f = 5;
		f = !false;
		f = 5+3;
		f = 6*3;
	f = 5;
	f = true;
	f = 5+3;
	f = true && false || false;
		return 8;
	}		

	a = 3 || 2;
	a = (3 + 2) / 3 - 5 * 2;
	a = true && false || false;
	a = 5;
	a = 0x012;
	a = true;
	a = -5;
	a = c[3] + 5;
	a = !false;
	return !true;
}		